--- a/es-app/src/ApiSystem.cpp.orig	2020-11-11 11:19:54.750042621 -0500
+++ b/es-app/src/ApiSystem.cpp	2020-11-11 11:23:34.010935745 -0500
@@ -1052,21 +1052,6 @@ bool ApiSystem::getBrighness(int& value)
 	char buffer[BACKLIGHT_BUFFER_SIZE + 1];
 	ssize_t count;
 
-	fd = open(BACKLIGHT_BRIGHTNESS_MAX_NAME, O_RDONLY);
-	if (fd < 0)
-		return false;
-
-	memset(buffer, 0, BACKLIGHT_BUFFER_SIZE + 1);
-
-	count = read(fd, buffer, BACKLIGHT_BUFFER_SIZE);
-	if (count > 0)
-		max = atoi(buffer);
-
-	close(fd);
-
-	if (max == 0) 
-		return 0;
-
 	fd = open(BACKLIGHT_BRIGHTNESS_NAME, O_RDONLY);
 	if (fd < 0)
 		return false;
@@ -1079,19 +1064,18 @@ bool ApiSystem::getBrighness(int& value)
 
 	close(fd);
 
-	value = (uint32_t) (value / (float)max * 100.0f);
 	return true;
 #endif
 }
 
 void ApiSystem::setBrighness(int value)
 {
-#if !WIN32	
+#if !WIN32
 	if (value < 5)
 		value = 5;
 
-	if (value > 100)
-		value = 100;
+	if (value > 255)
+		value = 255;
 
 	int fd;
 	int max = 255;
@@ -1117,14 +1101,26 @@ void ApiSystem::setBrighness(int value)
 	if (fd < 0)
 		return;
 	
-	float percent = value / 100.0f * (float)max;
-	sprintf(buffer, "%d\n", (uint32_t)percent);
+	sprintf(buffer, "%d\n", (uint32_t)value);
 
 	count = write(fd, buffer, strlen(buffer));
 	if (count < 0)
 		LOG(LogError) << "ApiSystem::setBrighness failed";
 
 	close(fd);
+
+        fd = open("/storage/.brightness", O_RDWR);
+        if (fd < 0)
+                return;
+
+        sprintf(buffer, "%d", (uint32_t)value);
+
+        count = write(fd, buffer, strlen(buffer));
+        if (count < 0)
+                LOG(LogError) << "ApiSystem::setBrighness (save) failed";
+
+        close(fd);
+
 #endif
 }
 
