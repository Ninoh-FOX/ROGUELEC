--- ./engine/openbor.c	2020-06-29 09:19:19.000000000 +0200
+++ ./engine/openbor_mod.c	2020-11-24 00:58:06.288889480 +0100
@@ -2420,6 +2420,7 @@
 void clearbuttons(int player)
 {
     savedata.joyrumble[player] = 0;
+	savedata.keys[player][SDID_AXISUP] = savedata.keys[player][SDID_AXISDOWN] = savedata.keys[player][SDID_AXISLEFT] = savedata.keys[player][SDID_AXISRIGHT] = 0; // FCANEW
 
     if (player == 0)
     {
@@ -31210,7 +31211,8 @@
         step = (step + MAX_SPECIAL_INPUTS) % MAX_SPECIAL_INPUTS;
 
         // old: !(a[l - 1 - j]&p->combokey[step])
-        if( ((a[l - 1 - j]&p->combokey[step]) ^ a[l - 1 - j]) ) // if input&combokey == 0 then not good btn
+        //if( ((a[l - 1 - j]&p->combokey[step]) ^ a[l - 1 - j]) ) // if input&combokey == 0 then not good btn
+		if ((a[l - 1 - j] & p->combokey[step]) == 0)
         {
             return 0;
         }
@@ -35270,10 +35272,10 @@
     for(p = 0; p < MAX_PLAYERS; p++)
     {
         control_setkey(playercontrolpointers[p], FLAG_ESC,        CONTROL_ESC);
-        control_setkey(playercontrolpointers[p], FLAG_MOVEUP,     savedata.keys[p][SDID_MOVEUP]);
-        control_setkey(playercontrolpointers[p], FLAG_MOVEDOWN,   savedata.keys[p][SDID_MOVEDOWN]);
-        control_setkey(playercontrolpointers[p], FLAG_MOVELEFT,   savedata.keys[p][SDID_MOVELEFT]);
-        control_setkey(playercontrolpointers[p], FLAG_MOVERIGHT,  savedata.keys[p][SDID_MOVERIGHT]);
+        control_setkey(playercontrolpointers[p], FLAG_PADUP,      savedata.keys[p][SDID_MOVEUP]); // FCANEW
+        control_setkey(playercontrolpointers[p], FLAG_PADDOWN,    savedata.keys[p][SDID_MOVEDOWN]); // FCANEW
+        control_setkey(playercontrolpointers[p], FLAG_PADLEFT,    savedata.keys[p][SDID_MOVELEFT]); // FCANEW
+        control_setkey(playercontrolpointers[p], FLAG_PADRIGHT,   savedata.keys[p][SDID_MOVERIGHT]); // FCANEW
         control_setkey(playercontrolpointers[p], FLAG_ATTACK,     savedata.keys[p][SDID_ATTACK]);
         control_setkey(playercontrolpointers[p], FLAG_ATTACK2,    savedata.keys[p][SDID_ATTACK2]);
         control_setkey(playercontrolpointers[p], FLAG_ATTACK3,    savedata.keys[p][SDID_ATTACK3]);
@@ -35282,6 +35284,10 @@
         control_setkey(playercontrolpointers[p], FLAG_SPECIAL,    savedata.keys[p][SDID_SPECIAL]);
         control_setkey(playercontrolpointers[p], FLAG_START,      savedata.keys[p][SDID_START]);
         control_setkey(playercontrolpointers[p], FLAG_SCREENSHOT, savedata.keys[p][SDID_SCREENSHOT]);
+		control_setkey(playercontrolpointers[p], FLAG_AXISUP,     savedata.keys[p][SDID_AXISUP]); // FCANEW
+		control_setkey(playercontrolpointers[p], FLAG_AXISDOWN,   savedata.keys[p][SDID_AXISDOWN]); // FCANEW
+		control_setkey(playercontrolpointers[p], FLAG_AXISLEFT,   savedata.keys[p][SDID_AXISLEFT]); // FCANEW
+		control_setkey(playercontrolpointers[p], FLAG_AXISRIGHT,  savedata.keys[p][SDID_AXISRIGHT]); // FCANEW
     }
 }
 
@@ -38129,7 +38135,7 @@
         selector = 0,
         setting = -1,
         i, k, ok = 0,
-              disabledkey[MAX_BTN_NUM] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
+              disabledkey[MAX_BTN_NUM] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0}, // FCANEW {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
                                 col1 = -8, col2 = 6;
     ptrdiff_t voffset, pos;
     char *buf,
@@ -38160,6 +38166,10 @@
     strcpy(buttonnames[SDID_START], "Start");
     strcpy(buttonnames[SDID_SCREENSHOT], "Screenshot");
     strcpy(buttonnames[SDID_ESC], "Exit");
+	strcpy(buttonnames[SDID_AXISUP], "Axis Up"); // FCANEW
+	strcpy(buttonnames[SDID_AXISDOWN], "Axis Down"); // FCANEW
+	strcpy(buttonnames[SDID_AXISLEFT], "Axis Left"); // FCANEW
+	strcpy(buttonnames[SDID_AXISRIGHT], "Axis Right"); // FCANEW
 
     savesettings();
     bothnewkeys = 0;

--- ./engine/openbor.h	2020-06-29 09:19:19.000000000 +0200
+++ ./engine/openbor_mod.h	2020-11-24 00:58:19.765351848 +0100
@@ -418,10 +418,10 @@
 {
     FLAG_ESC			= (1 << 0),
     FLAG_START			= (1 << 1),
-    FLAG_MOVELEFT		= (1 << 2),
-    FLAG_MOVERIGHT		= (1 << 3),
-    FLAG_MOVEUP		    = (1 << 4),
-    FLAG_MOVEDOWN		= (1 << 5),
+    FLAG_PADLEFT		= (1 << 2), // FCANEW
+    FLAG_PADRIGHT		= (1 << 3), // FCANEW
+    FLAG_PADUP		    = (1 << 4), // FCANEW
+    FLAG_PADDOWN		= (1 << 5), // FCANEW
     FLAG_ATTACK		    = (1 << 6),
     FLAG_JUMP			= (1 << 7),
     FLAG_SPECIAL		= (1 << 8),
@@ -430,9 +430,17 @@
     FLAG_ATTACK3		= (1 << 11),
     FLAG_ATTACK4		= (1 << 12),
     FLAG_ANYBUTTON		= (FLAG_START|FLAG_SPECIAL|FLAG_ATTACK|FLAG_ATTACK2|FLAG_ATTACK3|FLAG_ATTACK4|FLAG_JUMP),
-    FLAG_CONTROLKEYS    = (FLAG_SPECIAL|FLAG_ATTACK|FLAG_ATTACK2|FLAG_ATTACK3|FLAG_ATTACK4|FLAG_JUMP|FLAG_MOVEUP|FLAG_MOVEDOWN|FLAG_MOVELEFT|FLAG_MOVERIGHT),
+    FLAG_CONTROLKEYS    = (FLAG_SPECIAL|FLAG_ATTACK|FLAG_ATTACK2|FLAG_ATTACK3|FLAG_ATTACK4|FLAG_JUMP|FLAG_PADUP|FLAG_PADDOWN|FLAG_PADLEFT|FLAG_PADRIGHT), // FCANEW
     FLAG_FORWARD		= (1 << 13),
-    FLAG_BACKWARD		= (1 << 14)
+    FLAG_BACKWARD		= (1 << 14),
+	FLAG_AXISLEFT		= (1 << 15), // FCANEW
+	FLAG_AXISRIGHT		= (1 << 16), // FCANEW
+	FLAG_AXISUP			= (1 << 17), // FCANEW
+	FLAG_AXISDOWN		= (1 << 18), // FCANEW
+	FLAG_MOVEDOWN = FLAG_PADDOWN | FLAG_AXISDOWN, // FCANEW
+	FLAG_MOVEUP = FLAG_PADUP | FLAG_AXISUP, // FCANEW
+	FLAG_MOVELEFT = FLAG_PADLEFT | FLAG_AXISLEFT, // FCANEW
+	FLAG_MOVERIGHT = FLAG_PADRIGHT | FLAG_AXISRIGHT, // FCANEW
 } e_key_def;
 
 typedef enum
@@ -455,7 +463,11 @@
     SDID_SPECIAL,
     SDID_START,
     SDID_SCREENSHOT,
-    SDID_ESC
+    SDID_ESC,
+	SDID_AXISUP, // FCANEW 
+	SDID_AXISDOWN,
+	SDID_AXISLEFT,
+	SDID_AXISRIGHT
 } e_key_id;
 
 // Caskey, Damon V.

--- ./engine/source/savedata.h	2020-06-29 09:19:19.000000000 +0200
+++ ./engine/source/savedata_mod.h	2020-11-24 00:58:31.593757700 +0100
@@ -9,8 +9,8 @@
 #ifndef SAVEDATA_H
 #define SAVEDATA_H
 
-#define     MAX_PLAYERS         4
-#define     MAX_BTN_NUM         13
+#define     MAX_PLAYERS         4
+#define     MAX_BTN_NUM         17 // FCANEW // 13
 
 typedef struct
 {
