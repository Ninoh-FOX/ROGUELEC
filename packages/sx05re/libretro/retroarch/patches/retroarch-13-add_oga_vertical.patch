--- a/gfx/drivers/oga_gfx.c
+++ b/gfx/drivers/oga_gfx.c
@@ -617,16 +617,31 @@
 
       oga_rect_t r;
       oga_calc_bounds(&r, width, height, aspect_ratio);
+
+      settings_t *settings                 = config_get_ptr();
+      int rotation2 = HAL_TRANSFORM_ROT_270;
+      
+      if (settings->bools.video_oga_vertical_enable)
+      rotation2 = 0;
+
       oga_blit(vid->menu_surface, 0, 0, width, height,
-            page_surface, r.y, r.x, r.h, r.w, HAL_TRANSFORM_ROT_270, vid->scale_mode, 0);
+            page_surface, r.y, r.x, r.h, r.w, rotation2, vid->scale_mode, 0);
    }
 #endif
 
    if (blit_msg)
    {
+      settings_t *settings                 = config_get_ptr();
+
+      if (settings->bools.video_oga_vertical_enable) {
+      oga_blit(vid->msg_surface, 0, 0, vid->msg_width, vid->msg_height,
+            page_surface, 0, 0, vid->msg_width, vid->msg_height,
+            0, vid->scale_mode, 0xff0105);
+	} else { 
       oga_blit(vid->msg_surface, 0, 0, vid->msg_width, vid->msg_height,
             page_surface, 0, 0, vid->msg_height, vid->msg_width,
             HAL_TRANSFORM_ROT_270, vid->scale_mode, 0xff0105);
+	}
    }
 
    if (unlikely(drmModeSetCrtc(vid->fd, vid->crtc_id, page->fb_id, 0, 0, &vid->connector_id, 1, &vid->mode) != 0))
@@ -728,6 +743,11 @@
    oga_video_t *vid = (oga_video_t*)data;
    if (!vid)
       return;
+
+   settings_t *settings                 = config_get_ptr();
+   
+   if (settings->bools.video_oga_vertical_enable)
+   rotation = 0;
 
    switch (rotation)
    {

--- a/gfx/drivers_context/drm_go2_ctx.c
+++ b/gfx/drivers_context/drm_go2_ctx.c
@@ -295,6 +295,7 @@
 
 static void gfx_ctx_go2_drm_swap_buffers(void *data)
 {
+   settings_t *settings                 = config_get_ptr();
    gfx_ctx_go2_drm_data_t 
       *drm   = (gfx_ctx_go2_drm_data_t*)data;
 
@@ -321,11 +322,21 @@
    go2_context_swap_buffers(drm->context);
 
    go2_surface_t* surface = go2_context_surface_lock(drm->context);
+
+if (settings->bools.video_oga_vertical_enable) {
+   go2_presenter_post(drm->presenter,
+         surface,
+         src_x, src_y, src_w, src_h,
+         out_y, out_x, out_h, out_w,
+         GO2_ROTATION_DEGREES_0, 2);
+} else {
    go2_presenter_post(drm->presenter,
          surface,
          src_x, src_y, src_w, src_h,
          out_y, out_x, out_h, out_w,
          GO2_ROTATION_DEGREES_270, 2);
+}
+
    go2_context_surface_unlock(drm->context, surface);
 #endif
 }
